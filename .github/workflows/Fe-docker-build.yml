name: Frontend Docker CI/CD

on:
  workflow_run:
    workflows: ["Frontend CI"]
    types:
      - completed
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/academic-scheduler-frontend
          tags: |
            type=raw,value=latest
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/frontend.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/academic-scheduler-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/academic-scheduler-frontend:buildcache,mode=max

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment:
      name: production
    if: ${{ needs.docker.result == 'success' }}  # Ensure deployment only happens if the Docker job succeeded

    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.0  # Use stable version
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/academic-scheduler-frontend:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d \
              --name frontend \
              --restart unless-stopped \
              -p 80:80 \
              --network app-network \
              ${{ secrets.DOCKERHUB_USERNAME }}/academic-scheduler-frontend:latest
